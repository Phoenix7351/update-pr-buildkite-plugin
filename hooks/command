#!/bin/bash
set -euo pipefail

# To use this script:
#
#   1. Pass in values for:
#     GITHUB_REPO: String (i.e. juul-test)
#     GITHUB_COMMIT_SHA: String (i.e. 5f237eec94...)
#     GITHUB_ACCESS_TOKEN: String (i.e. 5f237eec94...)
#       Note that GITHUB_ACCESS_TOKEN should NOT be set during Test plan kickoff
#       A better place to set it would be on your agent directly or managed using a "Secrets" system like AWS.

#   2. Add a key hook set to "determine-success" in the BuildKite pipeline step that determines your fail/success status. I.e.:
#     - label: Process Results
#       key: determine-success
#       plugins:
#       - junit-annotate#v1.7.0:
#           artifacts: junit.xml-*
#           fail-build-on-error: true
#       agents:
#       - "results=true"

TESTS_PASSED=$(buildkite-agent step get "outcome" --step "determine-success")
echo $TESTS_PASSED

buildkite-agent artifact download "failures_artifacts_names.txt" .

ARTIFACTS_TO_POST=""

while IFS="" read -r p || [ -n "$p" ]
do
  # printf 'Looking for: %s\n' "$p"
  # buildkite-agent artifact download ""
  ARTIFACTS_TO_POST+=$(buildkite-agent artifact search "$p" -format "%u\n")
done < failures_artifacts_names.txt

echo $ARTIFACTS_TO_POST

CONTEXT="${GITHUB_CHECKS_CONTEXT:-Ether}"

if [ -v GITHUB_COMMIT_SHA ]; then
  if [ $TESTS_PASSED = "passed" ]; then
    echo "Informing Github that tests passed"
    curl -H "Authorization: token $GITHUB_ACCESS_TOKEN" \
         -X POST "https://api.github.com/repos/JuulLabs/$GITHUB_REPO/statuses/$GITHUB_COMMIT_SHA" \
         -d "{ \"state\": \"success\", \"target_url\": \"$BUILDKITE_BUILD_URL\", \"description\": \"End-to-end tests have succeeded!\", \"context\": \"$CONTEXT\"}"
  else
    echo "Informing Github that tests failed"
    curl -H "Authorization: token $GITHUB_ACCESS_TOKEN" \
         -X POST "https://api.github.com/repos/JuulLabs/$GITHUB_REPO/statuses/$GITHUB_COMMIT_SHA" \
         -d "{ \"state\": \"failure\", \"target_url\": \"$BUILDKITE_BUILD_URL\", \"description\": \"End-to-end tests have failed...\", \"context\": \"$CONTEXT\"}"

    if [ ! -z "$ARTIFACTS_TO_POST" ]; then
    	echo "Posting relevant artifacts to Github"
    # 	curl -L \
			 # -X POST \
			 # -H "Accept: application/vnd.github+json" \
			 # -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
			 # -H "X-GitHub-Api-Version: 2022-11-28" \
			 # "https://api.github.com/repos/JuulLabs/$GITHUB_REPO/pulls/$GITHUB_PR_NUMBER/comments" \
			 # -d "{\"body\": \"$ARTIFACTS_TO_POST\", \"commit_id\": \"$GITHUB_COMMIT_SHA\", "path":"file1.txt","start_line":1,"start_side":"RIGHT","line":2,"side":"RIGHT"}"

		curl -L \
			-X POST \
			-H "Accept: application/vnd.github+json" \
			-H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
			-H "X-GitHub-Api-Version: 2022-11-28" \
			"https://api.github.com/repos/JuulLabs/$GITHUB_REPO/issues/$GITHUB_PR_NUMBER/comments" \
			-d "{\"body\": \"$ARTIFACTS_TO_POST\"}"
    fi
  fi
fi
